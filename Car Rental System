import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Date;

class Car {
    private String numberPlate;
    private String make;
    private String model;
    private int year;
    private boolean isAvailable;

    public Car(String numberPlate, String make, String model, int year, boolean isAvailable) {
        this.numberPlate = numberPlate;
        this.make = make;
        this.model = model;
        this.year = year;
        this.isAvailable = isAvailable;
    }

    public String getNumberPlate() {
        return numberPlate;
    }

    public String getMake() {
        return make;
    }

    public String getModel() {
        return model;
    }

    public int getYear() {
        return year;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void setAvailability(boolean isAvailable) {
        this.isAvailable = isAvailable;
    }
}

class Customer {
    private String name;

    public Customer(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }
}

class RentalTransaction {
    private Customer customer;
    private Car car;
    private Date rentalDate;

    public RentalTransaction(Customer customer, Car car) {
        this.customer = customer;
        this.car = car;
        this.rentalDate = new Date();
    }

    public Customer getCustomer() {
        return customer;
    }

    public Car getCar() {
        return car;
    }

    public Date getRentalDate() {
        return rentalDate;
    }
}

public class CarRentalSystem {
    private List<Car> cars;
    private List<Customer> customers;
    private List<RentalTransaction> transactions;

    public CarRentalSystem() {
        this.cars = new ArrayList<>();
        this.customers = new ArrayList<>();
        this.transactions = new ArrayList<>();
    }

    public void addNewCar(Car car) {
        cars.add(car);
    }

    public void addNewCustomer(Customer customer) {
        customers.add(customer);
    }

    public void rentCar(Customer customer, Car car) {
        if (car.isAvailable()) {
            car.setAvailability(false);
            RentalTransaction transaction = new RentalTransaction(customer, car);
            transactions.add(transaction);
            System.out.println("Car rented successfully!");
        } else {
            System.out.println("Car is not available for rent.");
        }
    }

    public void returnCar(Car car) {
        car.setAvailability(true);
        System.out.println("Car returned successfully!");
    }

    public void displayAvailableCars() {
        for (Car car : cars) {
            if (car.isAvailable()) {
                System.out.println(car.getNumberPlate() + " - " + car.getMake() + " " + car.getModel() + " (" + car.getYear() + ")");
            }
        }
    }

    public void displayCustomerRentalHistory(Customer customer) {
        for (RentalTransaction transaction : transactions) {
            if (transaction.getCustomer().equals(customer)) {
                System.out.println("Rented " + transaction.getCar().getNumberPlate() + " on " + transaction.getRentalDate());
            }
        }
    }

    public static void main(String[] args) {
        CarRentalSystem system = new CarRentalSystem();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Welcome to Car Rental System");
            System.out.println("1. Add Car");
            System.out.println("2. Add Customer");
            System.out.println("3. Rent Car");
            System.out.println("4. Return Car");
            System.out.println("5. Display Available Cars");
            System.out.println("6. Display Customer Rental History");
            System.out.println("7. Exit");
            System.out.print("Enter your option: ");
            int option = scanner.nextInt();
            scanner.nextLine();

            switch (option) {
                case 1:
                    System.out.print("Enter plate Number: ");
                    String plate = scanner.nextLine();
                    System.out.print("Enter maker: ");
                    String maker = scanner.nextLine();
                    System.out.print("Enter model: ");
                    String model = scanner.nextLine();
                    System.out.print("Enter year: ");
                    int year = scanner.nextInt();
                    scanner.nextLine();
                    Car car = new Car(plate, maker, model, year, true);
                    system.addNewCar(car);
                    System.out.println("Car added successfully!");
                    break;
                case 2:
                    System.out.print("Enter customer name: ");
                    String name = scanner.nextLine();
                    Customer customer = new Customer(name);
                    system.addNewCustomer(customer);
                    System.out.println("Customer added successfully!");
                    break;
                case 3:
                    System.out.print("Enter customer name: ");
                    String customerName = scanner.nextLine();
                    Customer rentingCustomer = null;
                    for (Customer c : system.customers) {
                        if (c.getName().equals(customerName)) {
                            rentingCustomer = c;
                            break;
                        }
                    }
                    if (rentingCustomer == null) {
                        System.out.println("Customer not found.");
                        break;
                    }
                    system.displayAvailableCars();
                    System.out.print("Enter car plate: ");
                    String rentPlate = scanner.nextLine();
                    Car rentingCar = null;
                    for (Car c : system.cars) {
                        if (c.getNumberPlate().equals(rentPlate)) {
                            rentingCar = c;
                            break;
                        }
                    }
                    if (rentingCar == null) {
                        System.out.println("Car not found.");
                        break;
                    }
                    system.rentCar(rentingCustomer, rentingCar);
                    break;
                case 4:
                    System.out.print("Enter car plate number: ");
                    String returnPlate = scanner.nextLine();
                    Car returningCar = null;
                    for (Car c : system.cars) {
                        if (c.getNumberPlate().equals(returnPlate)) {
                            returningCar = c;
                            break;
                        }
                    }
                    if (returningCar == null) {
                        System.out.println("Car not found.");
                        break;
                    }
                    system.returnCar(returningCar);
                    break;
                case 5:
                    system.displayAvailableCars();
                    break;
                case 6:
                    System.out.print("Enter customer name: ");
                    String historyCustomerName = scanner.nextLine();
                    Customer historyCustomer = null;
                    for (Customer c : system.customers) {
                        if (c.getName().equals(historyCustomerName)) {
                            historyCustomer = c;
                            break;
                        }
                    }
                    if (historyCustomer == null) {
                        System.out.println("Customer not found.");
                        break;
                    }
                    system.displayCustomerRentalHistory(historyCustomer);
                    break;
                case 7:
                    System.out.println("Exiting....");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }
    }
}
